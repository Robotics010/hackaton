<?xml version="1.0" ?>
<robot name="big_robotic" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:property name="base_width" value="0.34"/>
  <xacro:property name="base_length" value="0.25"/>
  <xacro:property name="base_height" value="0.32"/>

  <xacro:property name="wheel_radius" value="0.0381"/>
  <xacro:property name="wheel_width" value="0.0254"/>
  <xacro:property name="wheel_ygap" value="-0.058"/>
  <xacro:property name="wheel_zoff" value="${base_height / 2}"/>
  <xacro:property name="wheel_xoff" value="0.05"/>

  <xacro:property name="caster_xoff" value="0.066"/>

  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Robot Base -->
  <gazebo reference="base_link">
    <visual>
      <material name="Cyan">
        <ambient>0 1.0 1.0 1.0</ambient>
        <diffuse>0 1.0 1.0 1.0</diffuse>
        <specular>0 1.0 1.0 1.0</specular>
      </material>
    </visual>
  </gazebo>
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint" />
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

  <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <!-- Wheels -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

    <gazebo reference="${prefix}_link">
      <visual>
        <material name="Gray">
          <ambient>0.5 0.5 0.5 1.0</ambient>
          <diffuse>0.5 0.5 0.5 1.0</diffuse>
          <specular>0.5 0.5 0.5 1.0</specular>
        </material>
      </visual>
    </gazebo>
    <link name="${prefix}_link">
      <visual>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>
    </collision>
    <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>
  </xacro:macro>

  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />

  <!-- Caster Wheel -->
  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="back_caster"/>
    <origin xyz="${caster_xoff} 0.0 ${-wheel_zoff}" rpy="0 0 0"/>
  </joint>

  <gazebo reference="back_caster">
    <visual>
      <material name="Gray">
      <ambient>0.5 0.5 0.5 1.0</ambient>
      <diffuse>0.5 0.5 0.5 1.0</diffuse>
      <specular>0.5 0.5 0.5 1.0</specular>
      </material>
    </visual>
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
  </gazebo>
  <link name="back_caster">
    <visual>
      <geometry>
        <sphere radius="${wheel_radius}"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}"/>
      </geometry>
    </collision>
    <xacro:sphere_inertia m="0.5" r="${wheel_radius}"/>
  </link>

  <gazebo>
   <plugin
      filename="ignition-gazebo-diff-drive-system"
      name="gz::sim::systems::DiffDrive">
      <left_joint>drivewhl_l_joint</left_joint>
      <right_joint>drivewhl_r_joint</right_joint>
      <wheel_separation>${(base_width+2*wheel_ygap+wheel_width)}</wheel_separation>
      <wheel_radius>${wheel_radius}</wheel_radius>
      <max_linear_acceleration>1</max_linear_acceleration>
      <min_linear_acceleration>-1</min_linear_acceleration>
      <max_angular_acceleration>2</max_angular_acceleration>
      <min_angular_acceleration>-2</min_angular_acceleration>
      <max_linear_velocity>0.46</max_linear_velocity>
      <min_linear_velocity>-0.46</min_linear_velocity>
      <max_angular_velocity>1.9</max_angular_velocity>
      <min_angular_velocity>-1.9</min_angular_velocity>
      <topic>cmd_vel</topic>
      <odom_topic>odom</odom_topic>
      <tf_topic>tf</tf_topic>
      <frame_id>odom</frame_id>
      <child_frame_id>base_link</child_frame_id>
      <odom_publish_frequency>10</odom_publish_frequency>
    </plugin>
  </gazebo>

</robot>
